diff -Naur a/app/drawview.cpp b/app/drawview.cpp
--- a/app/drawview.cpp	2021-05-28 05:44:59.000000000 -0400
+++ b/app/drawview.cpp	2021-10-02 21:44:13.446565076 -0400
@@ -226,8 +226,8 @@
 	DrawDiagram *dg = new DrawDiagram(infile);
 	if (!dg->isValid())
 	{
-		KMessageBox::sorry(this, xi18nc("@info", "Error loading drawing file<nl/><filename>%2</filename><nl/><nl/><emphasis>%1</emphasis>",
-						dg->drawError(), infile));
+		//KMessageBox::sorry(this, xi18nc("@info", "Error loading drawing file<nl/><filename>%2</filename><nl/><nl/><emphasis>%1</emphasis>",
+		//				dg->drawError(), infile));
 		delete dg;
 		return (false);
 	}
@@ -285,8 +285,8 @@
 
 	if (!mDiagram->drawError().isEmpty())
 	{
-		KMessageBox::information(this, xi18nc("@info", "Problem in drawing file<nl/><filename>%2</filename><nl/><nl/><emphasis>%1</emphasis>",
-						      mDiagram->drawError(), infile));
+		//KMessageBox::information(this, xi18nc("@info", "Problem in drawing file<nl/><filename>%2</filename><nl/><nl/><emphasis>%1</emphasis>",
+		//				      mDiagram->drawError(), infile));
 	}
 
 	QAction *act = actionCollection()->action("file_save");
@@ -438,6 +438,52 @@
 					      formatName, expfile));
 }
 
+
+void DrawView::exportTo(const QString &expfile)
+{
+	if (mDiagram==NULL) return;			// nothing to print
+
+	QPaintDevice *device;
+
+	QString formatName = "SVG";
+
+	QSvgGenerator *gen = new QSvgGenerator;
+
+	gen->setFileName(expfile);
+	gen->setTitle(expfile);
+	gen->setDescription(tr("Generated by %1").arg(qApp->applicationName()));
+
+	// The setSize() below sets the SVG page size, which is output
+	// in millimetres.  However, coordinates in the generated SVG
+	// are output without units (i.e. in user units).  In order
+	// to get the correct object sizes, the SVG resolution needs
+	// to be set to the same as the current screen resolution.
+	int xdpi = wDrawing->logicalDpiX();
+	int ydpi = wDrawing->logicalDpiY();
+	gen->setResolution(qRound((xdpi+ydpi)/2.0));
+
+	// Although the API documentation doesn't actually give any
+	// specifics, QSvgGenerator::setSize() expects the page size
+	// in pixels at the generator's resolution (which is in
+	// dots per inch).  The size is output in the SVG file in
+	// millimetres:
+	//
+	//   <svg width="726.017mm" height="513.644mm" xmlns= ...>
+	//
+	// This needs to happen after the setResolution() above.
+	unsigned int printWidth;
+	unsigned int printHeight;
+	PaperUtil::getSize(mPagesize, mOrient, &printWidth, &printHeight, QPrinter::Millimeter);
+	double res = gen->resolution()/25.4;
+	gen->setSize(QSize(qRound(printWidth*res), qRound(printHeight*res)));
+
+	device = gen;				// use this paint device
+
+	wDrawing->printDiagram(device);			// do the print/export
+	delete device;					// finished with device
+}
+
+
 //////////////////////////////////////////////////////////////////////////
 //									//
 //  "Settings" menu operations						//
diff -Naur a/app/drawview.h b/app/drawview.h
--- a/app/drawview.h	2021-05-28 05:44:59.000000000 -0400
+++ b/app/drawview.h	2021-10-02 21:36:52.132939385 -0400
@@ -69,6 +69,7 @@
 	virtual ~DrawView();
 
 	bool isValid() const			{ return (mDiagram!=NULL); }
+	void exportTo(const QString &expfile = QString());
 
 protected:
 	void drawingSizeChanged();
diff -Naur a/app/main.cpp b/app/main.cpp
--- a/app/main.cpp	2021-05-28 05:44:59.000000000 -0400
+++ b/app/main.cpp	2021-10-02 21:36:52.132939385 -0400
@@ -84,10 +84,17 @@
 
     parser.addPositionalArgument("file", i18n("File to load"), i18n("[file...]"));
 
+	QCommandLineOption targetDirectoryOption(QStringList() << "e" << "export-directory",
+            QCoreApplication::translate("main", "Export all input files as SVG into <directory>."),
+            QCoreApplication::translate("main", "directory"));
+    parser.addOption(targetDirectoryOption);
+
     aboutData.setupCommandLine(&parser);
     parser.process(app);
     aboutData.processCommandLine(&parser);
 
+	QString exportDir = parser.value(targetDirectoryOption);
+
     DrawView *v = nullptr;
     const QStringList args = parser.positionalArguments();
     for (int i = 0; i<args.count(); ++i)		// load project or data files
@@ -102,8 +109,20 @@
         }
 
         v = new DrawView(u.toLocalFile());
-        if (!v->isValid()) v->deleteLater();
-        else v->show();
+        if (!v->isValid())
+		{
+			v->deleteLater();
+		}
+		else if(exportDir.length()>0)
+		{
+			QString expfile = QString("%1%2%3.svg").arg(exportDir, exportDir.endsWith("/") ? "" : "/", u.fileName());
+			printf("%s\n", expfile.toStdString().c_str());
+			v->exportTo(expfile);
+		}
+        else
+		{
+			v->show();
+		}
     }
 
     if (v==nullptr)					// no files were loaded
@@ -112,6 +131,9 @@
         v->show();
     }
 
+	if(exportDir.length()>0)
+		return 0;
+
     app.setQuitOnLastWindowClosed(true);		// can do this now
     return (app.exec());
 }  
